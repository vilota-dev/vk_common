// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: sensorextrinsic.capnp

#include "sensorextrinsic.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<67> b_d535a459430a0159 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89,   1,  10,  67,  89, 164,  53, 213,
     22,   0,   0,   0,   1,   0,   1,   0,
    138,  70,  94,   5,  36,  29,  88, 225,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 110, 115, 111, 114, 101, 120,
    116, 114, 105, 110, 115, 105,  99,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    110, 115, 111, 114,  69, 120, 116, 114,
    105, 110, 115, 105,  99,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
     98, 111, 100, 121,  70, 114,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     67,  62, 209,  56,  24, 113, 120, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109, 117,  70, 114,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     67,  62, 209,  56,  24, 113, 120, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  77, 111, 100, 105,
    102, 105, 101, 100,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d535a459430a0159 = b_d535a459430a0159.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d535a459430a0159[] = {
  &s_e178711838d13e43,
};
static const uint16_t m_d535a459430a0159[] = {0, 1, 2};
static const uint16_t i_d535a459430a0159[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d535a459430a0159 = {
  0xd535a459430a0159, b_d535a459430a0159.words, 67, d_d535a459430a0159, m_d535a459430a0159,
  1, 3, i_d535a459430a0159, nullptr, nullptr, { &s_d535a459430a0159, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace vkc {

// SensorExtrinsic
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SensorExtrinsic::_capnpPrivate::dataWordSize;
constexpr uint16_t SensorExtrinsic::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SensorExtrinsic::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SensorExtrinsic::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace

