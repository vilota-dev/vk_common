// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: odometry3d.capnp

#include "odometry3d.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<179> b_9928f99e42745410 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     16,  84, 116,  66, 158, 249,  40, 153,
     17,   0,   0,   0,   1,   0,   2,   0,
     85, 177, 103,  13, 126,  49, 105, 213,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 255,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 100, 111, 109, 101, 116, 114, 121,
     51, 100,  46,  99,  97, 112, 110, 112,
     58,  79, 100, 111, 109, 101, 116, 114,
    121,  51, 100,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    187, 195,   5,  13, 100,  25, 241, 214,
     17,   0,   0,   0,  82,   0,   0,   0,
    153, 101,  69,   7, 146,  58, 148, 151,
     17,   0,   0,   0, 122,   0,   0,   0,
     53, 219, 165, 164,  84, 235,  40, 253,
     17,   0,   0,   0, 114,   0,   0,   0,
     66, 111, 100, 121,  70, 114,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     82, 101, 102, 101, 114, 101, 110,  99,
    101,  70, 114,  97, 109, 101,   0,   0,
     86, 101, 108, 111,  99, 105, 116, 121,
     70, 114,  97, 109, 101,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     16,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   3,   0,   1,   0,
     40,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     68,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   1,   0,   0,   3,   0,   1,   0,
     76,   1,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     38, 194, 207, 205,  66, 193, 240, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 100, 121,  70, 114,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    187, 195,   5,  13, 100,  25, 241, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 102, 101, 114, 101, 110,  99,
    101,  70, 114,  97, 109, 101,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    153, 101,  69,   7, 146,  58, 148, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 108, 111,  99, 105, 116, 121,
     70, 114,  97, 109, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     53, 219, 165, 164,  84, 235,  40, 253,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     67,  62, 209,  56,  24, 113, 120, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101,  67, 111, 118,  97,
    114, 105,  97, 110,  99, 101,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 119, 105, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     84, 162, 176, 224, 103,  60, 116, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 119, 105, 115, 116,  67, 111, 118,
     97, 114, 105,  97, 110,  99, 101,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 101, 116,  67, 111, 117,
    110, 116, 101, 114,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9928f99e42745410 = b_9928f99e42745410.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9928f99e42745410[] = {
  &s_81743c67e0b0a254,
  &s_89f0c142cdcfc226,
  &s_97943a9207456599,
  &s_d6f119640d05c3bb,
  &s_e178711838d13e43,
  &s_fd28eb54a4a5db35,
};
static const uint16_t m_9928f99e42745410[] = {1, 0, 4, 5, 2, 8, 6, 7, 3};
static const uint16_t i_9928f99e42745410[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
const ::capnp::_::RawSchema s_9928f99e42745410 = {
  0x9928f99e42745410, b_9928f99e42745410.words, 179, d_9928f99e42745410, m_9928f99e42745410,
  6, 9, i_9928f99e42745410, nullptr, nullptr, { &s_9928f99e42745410, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_d6f119640d05c3bb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    187, 195,   5,  13, 100,  25, 241, 214,
     28,   0,   0,   0,   2,   0,   0,   0,
     16,  84, 116,  66, 158, 249,  40, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 100, 111, 109, 101, 116, 114, 121,
     51, 100,  46,  99,  97, 112, 110, 112,
     58,  79, 100, 111, 109, 101, 116, 114,
    121,  51, 100,  46,  66, 111, 100, 121,
     70, 114,  97, 109, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 119, 117,   0,   0,   0,   0,   0,
    110, 101, 100,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d6f119640d05c3bb = b_d6f119640d05c3bb.words;
#if !CAPNP_LITE
static const uint16_t m_d6f119640d05c3bb[] = {1, 0};
const ::capnp::_::RawSchema s_d6f119640d05c3bb = {
  0xd6f119640d05c3bb, b_d6f119640d05c3bb.words, 27, nullptr, m_d6f119640d05c3bb,
  0, 2, nullptr, nullptr, nullptr, { &s_d6f119640d05c3bb, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(BodyFrame_d6f119640d05c3bb, d6f119640d05c3bb);
static const ::capnp::_::AlignedData<32> b_97943a9207456599 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    153, 101,  69,   7, 146,  58, 148, 151,
     28,   0,   0,   0,   2,   0,   0,   0,
     16,  84, 116,  66, 158, 249,  40, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 100, 111, 109, 101, 116, 114, 121,
     51, 100,  46,  99,  97, 112, 110, 112,
     58,  79, 100, 111, 109, 101, 116, 114,
    121,  51, 100,  46,  82, 101, 102, 101,
    114, 101, 110,  99, 101,  70, 114,  97,
    109, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 117,   0,   0,   0,   0,   0,
    110, 119, 117,   0,   0,   0,   0,   0,
    110, 101, 100,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_97943a9207456599 = b_97943a9207456599.words;
#if !CAPNP_LITE
static const uint16_t m_97943a9207456599[] = {0, 2, 1};
const ::capnp::_::RawSchema s_97943a9207456599 = {
  0x97943a9207456599, b_97943a9207456599.words, 32, nullptr, m_97943a9207456599,
  0, 3, nullptr, nullptr, nullptr, { &s_97943a9207456599, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ReferenceFrame_97943a9207456599, 97943a9207456599);
static const ::capnp::_::AlignedData<33> b_fd28eb54a4a5db35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53, 219, 165, 164,  84, 235,  40, 253,
     28,   0,   0,   0,   2,   0,   0,   0,
     16,  84, 116,  66, 158, 249,  40, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 100, 111, 109, 101, 116, 114, 121,
     51, 100,  46,  99,  97, 112, 110, 112,
     58,  79, 100, 111, 109, 101, 116, 114,
    121,  51, 100,  46,  86, 101, 108, 111,
     99, 105, 116, 121,  70, 114,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
     98, 111, 100, 121,   0,   0,   0,   0,
    114, 101, 102, 101, 114, 101, 110,  99,
    101,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fd28eb54a4a5db35 = b_fd28eb54a4a5db35.words;
#if !CAPNP_LITE
static const uint16_t m_fd28eb54a4a5db35[] = {1, 0, 2};
const ::capnp::_::RawSchema s_fd28eb54a4a5db35 = {
  0xfd28eb54a4a5db35, b_fd28eb54a4a5db35.words, 33, nullptr, m_fd28eb54a4a5db35,
  0, 3, nullptr, nullptr, nullptr, { &s_fd28eb54a4a5db35, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(VelocityFrame_fd28eb54a4a5db35, fd28eb54a4a5db35);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace vkc {

// Odometry3d
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Odometry3d::_capnpPrivate::dataWordSize;
constexpr uint16_t Odometry3d::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Odometry3d::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Odometry3d::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace

