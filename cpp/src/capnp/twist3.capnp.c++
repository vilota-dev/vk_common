// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: twist3.capnp

#include "twist3.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_81743c67e0b0a254 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     84, 162, 176, 224, 103,  60, 116, 129,
     13,   0,   0,   0,   1,   0,   0,   0,
    120,  41,   3,  42, 222,  94, 249, 157,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 119, 105, 115, 116,  51,  46,  99,
     97, 112, 110, 112,  58,  84, 119, 105,
    115, 116,  51,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    108, 105, 110, 101,  97, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     14, 122,  95, 228,  99, 243, 123, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 103, 117, 108,  97, 114,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     14, 122,  95, 228,  99, 243, 123, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81743c67e0b0a254 = b_81743c67e0b0a254.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_81743c67e0b0a254[] = {
  &s_cb7bf363e45f7a0e,
};
static const uint16_t m_81743c67e0b0a254[] = {1, 0};
static const uint16_t i_81743c67e0b0a254[] = {0, 1};
const ::capnp::_::RawSchema s_81743c67e0b0a254 = {
  0x81743c67e0b0a254, b_81743c67e0b0a254.words, 47, d_81743c67e0b0a254, m_81743c67e0b0a254,
  1, 2, i_81743c67e0b0a254, nullptr, nullptr, { &s_81743c67e0b0a254, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace vkc {

// Twist3
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Twist3::_capnpPrivate::dataWordSize;
constexpr uint16_t Twist3::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Twist3::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Twist3::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace

