// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: flow2d.capnp

#include "flow2d.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_82fff9a03fb96224 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36,  98, 185,  63, 160, 249, 255, 130,
     13,   0,   0,   0,   1,   0,   1,   0,
    254, 231,  11, 181,  25,  88, 128, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  50, 100,  46,  99,
     97, 112, 110, 112,  58,  70, 108, 111,
    119,  50, 100,  84, 114,  97,  99, 107,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 113,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     22,  51,  93, 212, 109,  43,  71, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82fff9a03fb96224 = b_82fff9a03fb96224.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_82fff9a03fb96224[] = {
  &s_b1472b6dd45d3316,
};
static const uint16_t m_82fff9a03fb96224[] = {1, 0};
static const uint16_t i_82fff9a03fb96224[] = {0, 1};
const ::capnp::_::RawSchema s_82fff9a03fb96224 = {
  0x82fff9a03fb96224, b_82fff9a03fb96224.words, 49, d_82fff9a03fb96224, m_82fff9a03fb96224,
  1, 2, i_82fff9a03fb96224, nullptr, nullptr, { &s_82fff9a03fb96224, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_9819f93049d7bd4d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     77, 189, 215,  73,  48, 249,  25, 152,
     13,   0,   0,   0,   1,   0,   1,   0,
    254, 231,  11, 181,  25,  88, 128, 157,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  50, 100,  46,  99,
     97, 112, 110, 112,  58,  68, 105, 115,
    116,  97, 110,  99, 101,  69, 115, 116,
    105, 109,  97, 116, 105, 111, 110,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    249, 104, 137,   7, 212,  78,  21, 130,
      1,   0,   0,   0, 202,   0,   0,   0,
     68, 105, 115, 116,  97, 110,  99, 101,
     69, 115, 116, 105, 109,  97, 116, 105,
    111, 110,  77, 101, 116, 104, 111, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 116, 104, 111, 100,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    249, 104, 137,   7, 212,  78,  21, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  97, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9819f93049d7bd4d = b_9819f93049d7bd4d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9819f93049d7bd4d[] = {
  &s_82154ed4078968f9,
};
static const uint16_t m_9819f93049d7bd4d[] = {1, 0};
static const uint16_t i_9819f93049d7bd4d[] = {0, 1};
const ::capnp::_::RawSchema s_9819f93049d7bd4d = {
  0x9819f93049d7bd4d, b_9819f93049d7bd4d.words, 55, d_9819f93049d7bd4d, m_9819f93049d7bd4d,
  1, 2, i_9819f93049d7bd4d, nullptr, nullptr, { &s_9819f93049d7bd4d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_82154ed4078968f9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    249, 104, 137,   7, 212,  78,  21, 130,
     32,   0,   0,   0,   2,   0,   0,   0,
     77, 189, 215,  73,  48, 249,  25, 152,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  50, 100,  46,  99,
     97, 112, 110, 112,  58,  68, 105, 115,
    116,  97, 110,  99, 101,  69, 115, 116,
    105, 109,  97, 116, 105, 111, 110,  46,
     68, 105, 115, 116,  97, 110,  99, 101,
     69, 115, 116, 105, 109,  97, 116, 105,
    111, 110,  77, 101, 116, 104, 111, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 110, 103, 108, 101,  70, 114,
     97, 109, 101,  83, 116, 101, 114, 101,
    111,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 116, 105, 111, 110,  83, 116,
    101, 114, 101, 111,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82154ed4078968f9 = b_82154ed4078968f9.words;
#if !CAPNP_LITE
static const uint16_t m_82154ed4078968f9[] = {1, 0};
const ::capnp::_::RawSchema s_82154ed4078968f9 = {
  0x82154ed4078968f9, b_82154ed4078968f9.words, 33, nullptr, m_82154ed4078968f9,
  0, 2, nullptr, nullptr, nullptr, { &s_82154ed4078968f9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(DistanceEstimationMethod_82154ed4078968f9, 82154ed4078968f9);
static const ::capnp::_::AlignedData<147> b_e3a2209336c85d95 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    149,  93, 200,  54, 147,  32, 162, 227,
     13,   0,   0,   0,   1,   0,   3,   0,
    254, 231,  11, 181,  25,  88, 128, 157,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  50, 100,  46,  99,
     97, 112, 110, 112,  58,  70, 108, 111,
    119,  50, 100,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     26, 136,  25,  98,  52,  50,  25, 181,
      1,   0,   0,   0, 122,   0,   0,   0,
     68, 101, 116, 101,  99, 116, 111, 114,
     77, 101, 116, 104, 111, 100,   0,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     22,  51,  93, 212, 109,  43,  71, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  97, 100, 105,  97, 108,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 122, 105, 109, 117, 116, 104,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 118, 101, 108,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 103, 101,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 105, 115, 116, 111, 114, 121,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     36,  98, 185,  63, 160, 249, 255, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 116, 101,  99, 116, 111, 114,
     77, 101, 116, 104, 111, 100,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     26, 136,  25,  98,  52,  50,  25, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3a2209336c85d95 = b_e3a2209336c85d95.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e3a2209336c85d95[] = {
  &s_82fff9a03fb96224,
  &s_b1472b6dd45d3316,
  &s_b51932346219881a,
};
static const uint16_t m_e3a2209336c85d95[] = {5, 3, 7, 6, 0, 4, 1, 2};
static const uint16_t i_e3a2209336c85d95[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_e3a2209336c85d95 = {
  0xe3a2209336c85d95, b_e3a2209336c85d95.words, 147, d_e3a2209336c85d95, m_e3a2209336c85d95,
  3, 8, i_e3a2209336c85d95, nullptr, nullptr, { &s_e3a2209336c85d95, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_b51932346219881a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     26, 136,  25,  98,  52,  50,  25, 181,
     20,   0,   0,   0,   2,   0,   0,   0,
    149,  93, 200,  54, 147,  32, 162, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  50, 100,  46,  99,
     97, 112, 110, 112,  58,  70, 108, 111,
    119,  50, 100,  46,  68, 101, 116, 101,
     99, 116, 111, 114,  77, 101, 116, 104,
    111, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  97, 115, 116,   0,   0,   0,   0,
    115, 112,  97, 114, 115, 101,  83, 116,
    101, 114, 101, 111,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b51932346219881a = b_b51932346219881a.words;
#if !CAPNP_LITE
static const uint16_t m_b51932346219881a[] = {0, 1};
const ::capnp::_::RawSchema s_b51932346219881a = {
  0xb51932346219881a, b_b51932346219881a.words, 28, nullptr, m_b51932346219881a,
  0, 2, nullptr, nullptr, nullptr, { &s_b51932346219881a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(DetectorMethod_b51932346219881a, b51932346219881a);
static const ::capnp::_::AlignedData<125> b_fc8a2516cde71c21 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     33,  28, 231, 205,  22,  37, 138, 252,
     13,   0,   0,   0,   1,   0,   0,   0,
    254, 231,  11, 181,  25,  88, 128, 157,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  50, 100,  46,  99,
     97, 112, 110, 112,  58,  72,  70,  79,
    112, 116, 105,  99,  97, 108,  70, 108,
    111, 119,  82, 101, 115, 117, 108, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     38, 194, 207, 205,  66, 193, 240, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 101,  97, 109,  78,  97,
    109, 101,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101,  97, 110,  70, 108, 111, 119,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  68, 101, 110, 115,
    105, 116, 121,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  68,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    149,  93, 200,  54, 147,  32, 162, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  97, 103, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    127, 251,  86, 155,  41,  76,  45, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fc8a2516cde71c21 = b_fc8a2516cde71c21.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fc8a2516cde71c21[] = {
  &s_89f0c142cdcfc226,
  &s_a12d4c299b56fb7f,
  &s_e3a2209336c85d95,
};
static const uint16_t m_fc8a2516cde71c21[] = {4, 3, 0, 5, 2, 1};
static const uint16_t i_fc8a2516cde71c21[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_fc8a2516cde71c21 = {
  0xfc8a2516cde71c21, b_fc8a2516cde71c21.words, 125, d_fc8a2516cde71c21, m_fc8a2516cde71c21,
  3, 6, i_fc8a2516cde71c21, nullptr, nullptr, { &s_fc8a2516cde71c21, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<110> b_c1e1087c5a2ddbc8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    200, 219,  45,  90, 124,   8, 225, 193,
     13,   0,   0,   0,   1,   0,   0,   0,
    254, 231,  11, 181,  25,  88, 128, 157,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119,  50, 100,  46,  99,
     97, 112, 110, 112,  58,  72,  70,  83,
    112,  97, 114, 115, 101,  83, 116, 101,
    114, 101, 111,  82, 101, 115, 117, 108,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     38, 194, 207, 205,  66, 193, 240, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 101,  97, 109,  78,  97,
    109, 101,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 100, 117,  99, 105,  97, 108,
     67, 111, 114, 110, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    149,  93, 200,  54, 147,  32, 162, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116,  99, 104, 101, 100,  67,
    111, 114, 110, 101, 114, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    149,  93, 200,  54, 147,  32, 162, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 116, 101, 114, 101, 100,
     67, 111, 114, 110, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c1e1087c5a2ddbc8 = b_c1e1087c5a2ddbc8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c1e1087c5a2ddbc8[] = {
  &s_89f0c142cdcfc226,
  &s_e3a2209336c85d95,
};
static const uint16_t m_c1e1087c5a2ddbc8[] = {2, 4, 0, 3, 1};
static const uint16_t i_c1e1087c5a2ddbc8[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_c1e1087c5a2ddbc8 = {
  0xc1e1087c5a2ddbc8, b_c1e1087c5a2ddbc8.words, 110, d_c1e1087c5a2ddbc8, m_c1e1087c5a2ddbc8,
  2, 5, i_c1e1087c5a2ddbc8, nullptr, nullptr, { &s_c1e1087c5a2ddbc8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace vkc {

// Flow2dTrack
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Flow2dTrack::_capnpPrivate::dataWordSize;
constexpr uint16_t Flow2dTrack::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Flow2dTrack::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Flow2dTrack::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// DistanceEstimation
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t DistanceEstimation::_capnpPrivate::dataWordSize;
constexpr uint16_t DistanceEstimation::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind DistanceEstimation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DistanceEstimation::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Flow2d
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Flow2d::_capnpPrivate::dataWordSize;
constexpr uint16_t Flow2d::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Flow2d::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Flow2d::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// HFOpticalFlowResult
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t HFOpticalFlowResult::_capnpPrivate::dataWordSize;
constexpr uint16_t HFOpticalFlowResult::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind HFOpticalFlowResult::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HFOpticalFlowResult::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// HFSparseStereoResult
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t HFSparseStereoResult::_capnpPrivate::dataWordSize;
constexpr uint16_t HFSparseStereoResult::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind HFSparseStereoResult::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HFSparseStereoResult::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace

