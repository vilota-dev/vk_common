// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: se3.capnp

#include "se3.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_e178711838d13e43 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     67,  62, 209,  56,  24, 113, 120, 225,
     10,   0,   0,   0,   1,   0,   0,   0,
    175, 207, 184, 100,  68,  47, 153, 213,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101,  51,  46,  99,  97, 112, 110,
    112,  58,  83, 101,  51,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     14, 122,  95, 228,  99, 243, 123, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 114, 105, 101, 110, 116,  97, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     97,  64,   0, 175,  13,  68, 193, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e178711838d13e43 = b_e178711838d13e43.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e178711838d13e43[] = {
  &s_b9c1440daf004061,
  &s_cb7bf363e45f7a0e,
};
static const uint16_t m_e178711838d13e43[] = {1, 0};
static const uint16_t i_e178711838d13e43[] = {0, 1};
const ::capnp::_::RawSchema s_e178711838d13e43 = {
  0xe178711838d13e43, b_e178711838d13e43.words, 48, d_e178711838d13e43, m_e178711838d13e43,
  2, 2, i_e178711838d13e43, nullptr, nullptr, { &s_e178711838d13e43, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace vkc {

// Se3
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Se3::_capnpPrivate::dataWordSize;
constexpr uint16_t Se3::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Se3::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Se3::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace

